// 
// _buttons.scss
// 

button,
a {
  outline: none !important;
}


// Rounded Buttons
.btn-rounded {
  border-radius: 30px;
}

.btn-dark {
  color: $gray-200 !important;
}

.btn-outline-dark {
  &:hover {
    color: $gray-200 !important;
  }
}

//
// Base styles
//

.btn {
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $font-weight-medium;
  line-height: $btn-line-height;
  color: $white;
  text-align: center;
  text-decoration: if($link-decoration==none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;
  // background-color: transparent;
  // border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-border-radius);
  @include transition($btn-transition);
  border: none;
  // &:hover {
  //   color: $body-color;
  //   text-decoration: if($link-hover-decoration==underline, none, null);
  // }

  .btn-check:focus+&,
  &:focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  .btn-check:checked+&,
  .btn-check:active+&,
  &:active,
  &.active {
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }

  &:disabled,
  &.disabled,
  fieldset:disabled & {
    pointer-events: none;
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  } 

  &.btn-primary {
    // background: linear-gradient(180deg, #2EB7D3 0.01%, #06738A 100%), linear-gradient(135deg, rgba(69, 252, 219, 0.8) 0%, rgba(30, 132, 252, 0.8) 96.83%), linear-gradient(135deg, #A1FF8B 0%, #3F93FF 96.83%), #6C5DD3;
    background: linear-gradient((0deg, #158DA7 0%, #158DA7 100%), #00ACB6);
    background-color: #06738A;
    // box-shadow: 0px 8px 16px rgba(143, 149, 178, 0.15);
    &:hover {
      color: $white;
    }
  }
}


//
// Alternate buttons
//

// scss-docs-start btn-variant-loops
@each $color,
$value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value, $value);
  }
}

@each $color,
$value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}

// scss-docs-end btn-variant-loops


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $btn-link-color;
  text-decoration: $link-decoration;

  &:hover {
    color: $btn-link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus {
    text-decoration: $link-hover-decoration;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);
}